name: Release

on:
  push:
    branches:
      - main

env:
  BOT_NAME: nr-opensource-bot
  BOT_EMAIL: opensource+bot@newrelic.com

jobs:
  generate-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Download Cached Dependencies
        id: cache-node-modules
        uses: actions/cache@v1
        env:
          cache-name: node-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Configure NPM
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > .npmrc

      - name: Lerna Publish
        env:
          GIT_AUTHOR_NAME: ${{ env.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ env.BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ env.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ env.BOT_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
        run: yarn release
